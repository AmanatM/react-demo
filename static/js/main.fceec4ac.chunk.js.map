{"version":3,"sources":["components/App.js","index.js"],"names":["SearchBar","handleSearch","searchValue","placeholder","autoFocus","value","onChange","CountryInformation","country","name","capital","population","languages","length","map","item","key","width","height","src","flag","alt","city","WeatherInformation","url","useState","weather","setWeather","useEffect","axios","get","then","res","data","current","temperature","weather_icons","index","wind_speed","wind_dir","Display","countries","setCurrentCountry","currentCountry","handleCountryClick","filteredCountries","filter","countryName","toLowerCase","includes","data-name","onClick","slice","noMatches","find","App","setCountries","setSearchValue","e","target","attributes","getNamedItem","ReactDOM","render","document","getElementById"],"mappings":"0MAKMA,EAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YAChC,OACE,6BACE,kDAAuB,2BAAOC,YAAY,iBAAiBC,WAAW,EAAMC,MAAOH,EAAaI,SAAUL,OAK1GM,EAAqB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC3B,OACE,6BACE,4BAAKA,EAAQC,MACb,uCAAaD,EAAQE,SACrB,0CAAgBF,EAAQG,YACvBH,EAAQI,UAAUC,OAAS,EAAI,2CAAuB,0CACvD,4BACGL,EAAQI,UAAUE,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,EAAKN,MAAOM,EAAKN,UAE3D,yBAAKQ,MAAM,QAAQC,OAAO,QAAQC,IAAKX,EAAQY,KAAMC,IAAI,iBACzD,kBAAC,EAAD,CAAoBC,KAAMd,EAAQE,YAKlCa,EAAqB,SAAC,GAAY,IAAXD,EAAU,EAAVA,KAEvBE,EAAG,gGAA4FF,GAF9D,EAGLG,mBAAS,MAHJ,mBAG7BC,EAH6B,KAGpBC,EAHoB,KAcrC,OATAC,qBAAU,WACRC,IACCC,IAAIN,GACJO,MAAK,SAAAC,GACJL,EAAWK,EAAIC,WAEhB,CAACT,IAGDE,EAEC,oCACE,0CAAgBJ,GAChB,2CAAiBI,EAAQQ,QAAQC,aAChCT,EAAQQ,QAAQE,cAActB,KAAI,SAACU,EAAKa,GAAN,OAAgB,yBAAKrB,IAAKqB,EAAOlB,IAAKK,OACzE,oCAAUE,EAAQQ,QAAQI,WAA1B,oBAAuDZ,EAAQQ,QAAQK,WAMzE,uDAQAC,EAAU,SAAC,GAAqF,IAApFC,EAAmF,EAAnFA,UAAWvC,EAAwE,EAAxEA,YAAawC,EAA2D,EAA3DA,kBAAmBC,EAAwC,EAAxCA,eAAgBC,EAAwB,EAAxBA,mBACvEC,EAAoBJ,EAAU3B,KAAI,SAAAN,GAAO,OAAIA,EAAQC,QAAMqC,QAAO,SAAAC,GAAW,OAAIA,EAAYC,cAAcC,SAAS/C,EAAY8C,kBAAgBlC,KAAI,SAAAC,GAAI,OAAI,wBAAIC,IAAKD,GAAOA,EAAK,4BAAQmC,YAAWnC,EAAMoC,QAASP,GAAlC,YAA0EQ,MAAM,EAAG,IACpQC,GAAY,EAUhB,OATgC,IAA7BR,EAAkBhC,OACnB6B,EAAkBD,EAAUa,MAAK,SAAAvC,GAAI,OAAIA,EAAKN,OAASoC,EAAkB,GAAG7B,QACvC,IAA7B6B,EAAkBhC,QAC1B6B,EAAkB,MAClBW,GAAY,GAEZX,EAAkB,MAGjBW,EAEC,kDAIsB,KAAhBnD,EAEN,+CAKuB,OAAnByC,EAEJ,6BACIE,GAKJ,6BACE,kBAAC,EAAD,CAAoBrC,QAASmC,MAuCtBY,EA/BH,WAAO,IAAD,EAEoB9B,mBAAS,IAF7B,mBAERgB,EAFQ,KAEGe,EAFH,OAGwB/B,mBAAS,IAHjC,mBAGRvB,EAHQ,KAGKuD,EAHL,OAI8BhC,mBAAS,MAJvC,mBAIRkB,EAJQ,KAIQD,EAJR,KAQhBd,qBAAU,WACRC,IACCC,IAAI,wCACJC,MAAK,SAAAC,GACJwB,EAAaxB,EAAIC,WAElB,IAUH,OACE,6BACE,kBAAC,EAAD,CAAWhC,aAVM,SAACyD,GACpBD,EAAeC,EAAEC,OAAOtD,QASiBH,YAAaA,IACpD,kBAAC,EAAD,CAAS0C,mBAPc,SAACc,GAC1BD,EAAeC,EAAEC,OAAOC,WAAWC,aAAa,aAAaxD,QAMVoC,UAAWA,EAAWvC,YAAaA,EAAayC,eAAgBA,EAAgBD,kBAAmBA,MC9H1JoB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.fceec4ac.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\n\n//   https://restcountries.eu/rest/v2/all\n\nconst SearchBar = ({handleSearch, searchValue}) => {\n  return (\n    <div>\n      <p>Search for country: <input placeholder=\"Type to search\" autoFocus={true} value={searchValue} onChange={handleSearch}/></p>\n    </div>\n  )\n}\n\nconst CountryInformation = ({country}) => {\n  return (\n    <div>\n      <h1>{country.name}</h1>\n      <p>Capital: {country.capital}</p>\n      <p>Population: {country.population}</p>\n      {country.languages.length > 1 ? <h3>Languages: </h3> : <h3>Language: </h3>}\n      <ul>\n        {country.languages.map(item => <li key={item.name}>{item.name}</li>)}\n      </ul>\n      <img width=\"250px\" height=\"150px\" src={country.flag} alt=\"Country flag\"/>\n      <WeatherInformation city={country.capital}/>\n    </div>\n  )\n}\n\nconst WeatherInformation = ({city}) => {\n\n  let url = `http://api.weatherstack.com/current?access_key=d5edec813030391a9046197ffaf8bdc4&query=${city}`\n  const [ weather, setWeather ] = useState(null)\n\n  useEffect(() => {\n    axios\n    .get(url)\n    .then(res => {\n      setWeather(res.data)\n    })\n  }, [url])\n\n\n  if(weather) {\n    return (\n      <>\n        <h3>Weather in {city}</h3>\n        <p>Temperature: {weather.current.temperature}</p>\n        {weather.current.weather_icons.map((url, index) => <img key={index} src={url}/>)}\n        <p>Wind: {weather.current.wind_speed} k/h, direction: {weather.current.wind_dir}</p>\n\n      </>\n    )\n  } else {\n    return (\n      <p>Loading weather data...</p>\n    )\n  }\n\n\n}\n\n\nconst Display = ({countries, searchValue, setCurrentCountry, currentCountry, handleCountryClick}) => {\n  let filteredCountries = countries.map(country => country.name).filter(countryName => countryName.toLowerCase().includes(searchValue.toLowerCase())).map(item => <li key={item}>{item}<button data-name={item} onClick={handleCountryClick}>Show</button></li>).slice(0, 10)\n  let noMatches = false\n  if(filteredCountries.length === 1) {\n    setCurrentCountry(countries.find(item => item.name === filteredCountries[0].key))\n  } else if(filteredCountries.length === 0){\n    setCurrentCountry(null)\n    noMatches = true\n  } else {\n    setCurrentCountry(null)\n  }\n\n  if(noMatches) {\n    return (\n      <div>\n         No matches at all\n      </div>\n    )\n  } else if(searchValue === '') {\n    return (\n      <div>\n         Type to search\n      </div>\n    )\n  }\n  else if(currentCountry === null) {\n    return (\n      <div>\n         {filteredCountries}\n      </div>\n    )\n  } else {\n    return (\n      <div>\n        <CountryInformation country={currentCountry}/>\n      </div>\n    )\n  }\n\n}\n\n\nconst App = () => {\n\n  const [ countries, setCountries ] = useState([])\n  const [ searchValue, setSearchValue ] = useState('')\n  const [ currentCountry, setCurrentCountry ] = useState(null)\n\n\n\n  useEffect(() => {\n    axios\n    .get(\"https://restcountries.eu/rest/v2/all\")\n    .then(res => {\n      setCountries(res.data)\n    })\n  }, [])\n\n  const handleSearch = (e) => {\n    setSearchValue(e.target.value)\n  }\n\n  const handleCountryClick = (e) => {\n    setSearchValue(e.target.attributes.getNamedItem('data-name').value)\n  }\n\n  return (\n    <div>\n      <SearchBar handleSearch={handleSearch} searchValue={searchValue}/>\n      <Display handleCountryClick={handleCountryClick} countries={countries} searchValue={searchValue} currentCountry={currentCountry} setCurrentCountry={setCurrentCountry}/>\n    </div>\n  )\n}\nexport default App\n\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}